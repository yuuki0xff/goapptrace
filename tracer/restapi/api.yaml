swagger: '2.0'
info:
  title: Goapptrace REST API
  description: '**WARNING**: This API specification is draft version.'
  version: '0.1'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
basePath: /api/v0.1
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
definitions:
  server-list:
    description: List of log server statuses.
    type: object
    required:
      - servers
    properties:
      servers:
        type: array
        items:
          $ref: '#/definitions/server'
  server:
    description: Status of a log server.
    type: object
    required:
      - server-id
      - version
      - address
    properties:
      server-id:
        type: integer
        format: int64
        minimum: 1
        example: 10
      version:
        description: >-
          Version of the status. API server should increase version field value
          when this status was updated.
        type: integer
        format: int64
        minimum: 1
        example: 128
      address:
        description: Host and port.
        type: string
        pattern: '^[a-zA-Z0-9\-]+:\d+$'
        example: 'localhost:9000'
  log-list:
    description: List of log file statuses.
    type: object
    required:
      - logs
    properties:
      logs:
        type: array
        items:
          $ref: '#/definitions/log'
  log:
    description: Status of log file.
    type: object
    required:
      - log-id
      - version
      - max-file-size
      - read-only
    properties:
      log-id:
        type: string
        example: f459a84959e23d643705c8d6df19f4d0
        minLength: 32
        maxLength: 32
        description: LogID is string like hex value.
      version:
        type: integer
        format: int64
        minimum: 1
        example: 13
      max-file-size:
        type: integer
        format: int64
        description: separate the log file when file size exceeds max-file-size.
      read-only:
        type: boolean
      metadata:
        $ref: '#/definitions/log-metadata'
  log-metadata:
    description: Log metadata
    type: object
    properties:
      timestamp:
        type: integer
        format: int64
        example: 5900
        description: Last update time
      ui:
        type: object
        description: User interface settings
        properties:
          funcs:
            type: object
            description: Pinned items
            additionalProperties:
              $ref: '#/definitions/log-metadata-item-setting'
            example:
              '32':
                pinned: true
                comment: This function is pinned.
              '33':
                masked: true
                comment: This function is masked. Should not display this function.
          goroutines:
            type: object
            description: Lookup settings by Goroutine ID
            additionalProperties:
              $ref: '#/definitions/log-metadata-item-setting'
            example:
              '62':
                comment: This goroutine seems to be leaked !!!
  log-metadata-item-setting:
    type: object
    properties:
      pinned:
        type: boolean
      masked:
        type: boolean
      comment:
        type: string
  func-call-jsonlines:
    description: The multiple json separated by newline character.
    type: array
    items:
      $ref: '#/definitions/func-call'
  func-call:
    description: Detail of one function call event
    type: object
    required:
      - id
      - start-time
      - end-time
      - parent-id
      - frames
      - gid
    properties:
      id:
        type: integer
        format: int64
        example: 32
        description: evnet ID
      start-time:
        type: integer
        format: int64
        example: 5280
        description: Unix time at the start of function execution.
      end-time:
        type: integer
        format: int64
        example: 5900
        description: Unix time at the end of function execution.
      frames:
        type: array
        items:
          $ref: '#/definitions/symbol-func-status'
        example:
          - id: 20
            func: 15
            line: 137
          - id: 15
            func: 13
            line: 199
          - id: 11
            func: 11
            line: 216
        description: >-
          It is stacktrace. First item is current executing function. next item
          is caller of the first item.
      gid:
        type: integer
        format: int64
        example: 62
        description: Goroutine ID
  goroutine-jsonlines:
    description: The multiple json separated by newline character.
    type: array
    items:
      $ref: '#/definitions/goroutine'
  goroutine:
    description: Detail of thegoroutine
    type: object
    required:
      - goroutine-id
      - start-time
      - end-time
    properties:
      goroutine-id:
        type: integer
        format: int64
        example: 62
        description: Goroutine ID
      start-time:
        type: integer
        format: int64
        example: 5280
        description: Unix time at the start of goroutine.
      end-time:
        type: integer
        format: int64
        example: 5900
        description: Unix time at the end of goroutine.
  symbol-func:
    description: Details of the function.
    type: object
    required:
      - func-id
      - name
      - file
      - entry
    properties:
      func-id:
        type: integer
        format: int64
        example: 15
        description: FuncID
      name:
        type: string
        example: github.com/yuuki0xff/goapptrace.main
        description: Function name
      file:
        type: string
        example: /go/src/github.com/yuuki0xff/goapptrace/goapptrace.go
        description: Path to source file.
      entry:
        type: integer
        format: int64
        description: Entry point address of this function.
  symbol-func-status:
    description: Details of function execution status
    type: object
    required:
      - func-status-id
      - func-id
      - line
    properties:
      func-status-id:
        type: integer
        format: int64
        example: 20
        description: FuncStatusID
      func-id:
        type: integer
        format: int64
        example: 15
        description: FuncID
      line:
        type: integer
        format: int64
        example: 137
        description: The line number of currently executing.
  tracer-list:
    description: List of tracer.
    type: object
    required:
      - tracers
    properties:
      tracers:
        type: array
        items:
          $ref: '#/definitions/tracer'
  tracer:
    description: Status of tracer.
    required:
      - tracer-id
      - server-id
      - log-id
    properties:
      tracer-id:
        type: integer
        format: int64
        minimum: 1
        example: 5
        description: TracerID
      server-id:
        type: integer
        format: int64
        minimum: 1
        example: 3
        description: The log server is being received logs from this tracer.
      log-id:
        type: integer
        format: int64
        minimum: 1
        example: 15
        description: The log is being written events that have occurred on this tracer.
paths:
  /servers:
    get:
      description: Returns list of log servers.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/server-list'
  '/server/{server-id}/status':
    parameters:
      - name: server-id
        in: path
        required: true
        type: integer
    get:
      description: Returns current status of a server.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/server'
    put:
      description: Updates current status of a server.
      parameters:
        - name: version
          in: query
          description: Old status version.
          required: true
          type: integer
        - name: status
          in: body
          description: New status.
          required: true
          schema:
            $ref: '#/definitions/server'
      responses:
        '200':
          description: Successed to update status.
          schema:
            $ref: '#/definitions/server'
        '409':
          description: >-
            Failed to update status because of conflict. The API Server returns
            latest status. The API client had better retry to update status.
          schema:
            $ref: '#/definitions/server'
  '/server/{server-id}/watch':
    get:
      description: >-
        Long-polling API for status update notification. This API will be
        waiting for the status to change or timeout.
      parameters:
        - name: server-id
          in: path
          required: true
          type: integer
        - name: version
          in: query
          description: Status version.
          required: true
          type: integer
        - name: timeout
          in: query
          description: The unit is seconds.
          required: true
          type: integer
      responses:
        '200':
          description: Notify of status change.
          schema:
            $ref: '#/definitions/server'
        '204':
          description: Notify that this status was not changed until timeout.
  /logs:
    get:
      description: Returns all logs list.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/log-list'
  '/log/{log-id}':
    delete:
      description: Delete a log file.
      parameters:
        - name: log-id
          in: path
          required: true
          type: integer
      responses:
        '204':
          description: OK
  '/log/{log-id}/status':
    parameters:
      - name: log-id
        in: path
        required: true
        type: integer
    get:
      description: Returns current status of a specified log.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/log'
    put:
      description: Updates current status of a server.
      parameters:
        - name: version
          in: query
          description: Old status version.
          required: true
          type: integer
        - name: status
          in: body
          description: New status.
          schema:
            $ref: '#/definitions/log'
      responses:
        '200':
          description: Successed to update status.
          schema:
            $ref: '#/definitions/log'
        '409':
          description: >-
            Failed to update status because of conflict. The API Server returns
            latest status. The API client had better retry to update status.
          schema:
            $ref: '#/definitions/log'
  '/log/{log-id}/watch':
    get:
      description: >-
        Long-polling API for status update notification. This API will be
        waiting for the status to change or timeout.
      parameters:
        - name: log-id
          in: path
          required: true
          type: integer
        - name: version
          in: query
          description: Status version.
          required: true
          type: integer
        - name: timeout
          in: query
          description: The unit is seconds.
          required: true
          type: integer
      responses:
        '200':
          description: Notify for status change.
          schema:
            $ref: '#/definitions/log'
        '204':
          description: Notify for non-changed in timeout.
  '/log/{log-id}/func-call/search':
    get:
      description: Filters the function call log records.
      produces:
        - application/x-jsonlines
      parameters:
        - name: log-id
          in: path
          required: true
          type: integer
        - name: txid
          in: query
          description: Transaction ID.
          type: string
        - name: gid
          in: query
          description: Goroutine ID.
          type: integer
        - name: fid
          in: query
          description: Function ID.
          type: integer
        - name: mid
          in: query
          description: Module ID.
          type: integer
        - name: min-id
          in: query
          description: Minimum of log ID.
          type: integer
        - name: max-id
          in: query
          description: Maximum of log ID.
          type: integer
        - name: min-timestamp
          in: query
          description: Minimum of timestamp.
          type: integer
        - name: max-timestamp
          in: query
          description: Maximum of timestamp.
          type: integer
      responses:
        '200':
          description: Returns function call log records.
          schema:
            $ref: '#/definitions/func-call-jsonlines'
  '/log/{log-id}/func-call/stream':
    get:
      description: >-
        ilters the function call log records. This API and search API are
        basically the same. The difference point is behavior to new records
        received after API call. Search API returns a response immediately, and
        the response are not include new records. Stream API sending a response
        little by little including new records.
      produces:
        - application/x-jsonlines
      parameters:
        - name: log-id
          in: path
          required: true
          type: integer
        - name: txid
          in: query
          description: Transaction ID.
          type: string
        - name: gid
          in: query
          description: Goroutine ID.
          type: integer
        - name: fid
          in: query
          description: Function ID.
          type: integer
        - name: mid
          in: query
          description: Module ID.
          type: integer
        - name: min-id
          in: query
          description: Minimum of log ID.
          type: integer
        - name: max-id
          in: query
          description: Maximum of log ID.
          type: integer
        - name: min-timestamp
          in: query
          description: Minimum of timestamp.
          type: integer
        - name: max-timestamp
          in: query
          description: Maximum of timestamp.
          type: integer
      responses:
        '200':
          description: Returns log records forever.
          schema:
            $ref: '#/definitions/func-call-jsonlines'
  '/log/{log-id}/goroutines/search':
    get:
      description: Returns list of goroutines.
      produces:
        - application/x-jsonlines
      parameters:
        - name: log-id
          in: path
          required: true
          type: integer
        - name: min-timestamp
          in: query
          description: Minimum of timestamp.
          type: integer
        - name: max-timestamp
          in: query
          description: Maximum of timestamp.
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/goroutine-jsonlines'
  '/log/{log-id}/symbol/func/{func-id}':
    get:
      description: Returns detail of the function.
      parameters:
        - name: log-id
          in: path
          required: true
          type: integer
        - name: func-id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/symbol-func'
  '/log/{log-id}/symbol/func-status/{func-status-id}':
    get:
      description: Returns the execution status of the function.
      parameters:
        - name: log-id
          in: path
          required: true
          type: integer
        - name: func-status-id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: success
          schema:
            $ref: '#/definitions/symbol-func-status'
  /tracers:
    get:
      description: Returns all tracer list.
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/tracer-list'
  '/tracer/{tracer-id}':
    delete:
      description: Delete a tracer. This tracer will stop forcibly.
      parameters:
        - name: tracer-id
          in: path
          required: true
          type: integer
      responses:
        '202':
          description: >-
            Request is accepted. This response do not guarantee that this tracer
            is stopped.
  '/tracer/{tracer-id}/status':
    get:
      description: Returns current status of a tracer.
      parameters:
        - name: tracer-id
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/tracer'
    put:
      description: Updates current status of a server.
      parameters:
        - name: tracer-id
          in: path
          required: true
          type: integer
        - name: version
          in: query
          description: Old status version.
          required: true
          type: integer
        - name: status
          in: body
          description: New status.
          schema:
            $ref: '#/definitions/tracer'
      responses:
        '200':
          description: Successed to update status.
          schema:
            $ref: '#/definitions/tracer'
        '409':
          description: >-
            Failed to update status because of conflict. The API Server returns
            latest status. The API client had better retry to update status.
          schema:
            $ref: '#/definitions/tracer'
  '/tracer/{tracer-id}/watch':
    get:
      description: >-
        Long-polling API for status update notification. This API will be
        waiting for the status to change or timeout.
      parameters:
        - name: tracer-id
          in: path
          required: true
          type: integer
        - name: version
          in: query
          description: Status version.
          required: true
          type: integer
        - name: timeout
          in: query
          description: The unit is seconds.
          required: true
          type: integer
      responses:
        '200':
          description: Notify for status change.
          schema:
            $ref: '#/definitions/server'
        '204':
          description: Notify for non-changed in timeout.
