// Code generated by capnpc-go. DO NOT EDIT.

package goserbench

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Capnp2A struct{ capnp.Struct }

// Capnp2A_TypeID is the unique identifier for the type Capnp2A.
const Capnp2A_TypeID = 0xa6f4401be1b430d1

func NewCapnp2A(s *capnp.Segment) (Capnp2A, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Capnp2A{st}, err
}

func NewRootCapnp2A(s *capnp.Segment) (Capnp2A, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1})
	return Capnp2A{st}, err
}

func ReadRootCapnp2A(msg *capnp.Message) (Capnp2A, error) {
	root, err := msg.RootPtr()
	return Capnp2A{root.Struct()}, err
}

func (s Capnp2A) String() string {
	str, _ := text.Marshal(0xa6f4401be1b430d1, s.Struct)
	return str
}

func (s Capnp2A) Id() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s Capnp2A) SetId(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s Capnp2A) Tag() uint8 {
	return s.Struct.Uint8(8)
}

func (s Capnp2A) SetTag(v uint8) {
	s.Struct.SetUint8(8, v)
}

func (s Capnp2A) Timestamp() int64 {
	return int64(s.Struct.Uint64(16))
}

func (s Capnp2A) SetTimestamp(v int64) {
	s.Struct.SetUint64(16, uint64(v))
}

func (s Capnp2A) Frames() (capnp.UInt64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt64List{List: p.List()}, err
}

func (s Capnp2A) HasFrames() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Capnp2A) SetFrames(v capnp.UInt64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewFrames sets the frames field to a newly
// allocated capnp.UInt64List, preferring placement in s's segment.
func (s Capnp2A) NewFrames(n int32) (capnp.UInt64List, error) {
	l, err := capnp.NewUInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Capnp2A) Gid() int64 {
	return int64(s.Struct.Uint64(24))
}

func (s Capnp2A) SetGid(v int64) {
	s.Struct.SetUint64(24, uint64(v))
}

func (s Capnp2A) Txid() uint64 {
	return s.Struct.Uint64(32)
}

func (s Capnp2A) SetTxid(v uint64) {
	s.Struct.SetUint64(32, v)
}

// Capnp2A_List is a list of Capnp2A.
type Capnp2A_List struct{ capnp.List }

// NewCapnp2A creates a new list of Capnp2A.
func NewCapnp2A_List(s *capnp.Segment, sz int32) (Capnp2A_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 40, PointerCount: 1}, sz)
	return Capnp2A_List{l}, err
}

func (s Capnp2A_List) At(i int) Capnp2A { return Capnp2A{s.List.Struct(i)} }

func (s Capnp2A_List) Set(i int, v Capnp2A) error { return s.List.SetStruct(i, v.Struct) }

func (s Capnp2A_List) String() string {
	str, _ := text.MarshalList(0xa6f4401be1b430d1, s.List)
	return str
}

// Capnp2A_Promise is a wrapper for a Capnp2A promised by a client call.
type Capnp2A_Promise struct{ *capnp.Pipeline }

func (p Capnp2A_Promise) Struct() (Capnp2A, error) {
	s, err := p.Pipeline.Struct()
	return Capnp2A{s}, err
}

const schema_e18e32ede031d499 = "x\xdaD\x8c\xbfJ+q\x14\x84g\xce\xd9_\xf6\xa6" +
	"\xb9z`\x0b\xd1\xceRPL\xca4F|\x81\x1c\x1b" +
	"\xeb%\xffH\x11\x09\xc9\x0a>\x85\x95\x85)\x84\x08A" +
	"\x10,-,\x14\x15\x14D\xb0\x08\xf8\x00\xe6\x01\xec\xec" +
	"W6 V3\xcc\xc7|\xcb\x93\xbaT\xc2\x03\x01O" +
	"B)\x9fm\xdf\xcc\xd7\xea\xdf\x97pc\xc8\xc7\x1f\x95" +
	"\xcf\xaf\xea\xc9\x1c\x811`/o6\x8b\x81\xca\xfb\x01" +
	"\xb1\x99\x8f\xb2\xe1Q3k\xb5\xa5\xb3\xd5L\x07\x87\x83" +
	"jmo\x11\xbb@\x83\xf4\x15\x8d\x80\x88\x80\x8dW\x01" +
	"?U\xfaDh\xfc\x97\xb0\x18\xcf\xd7\x01?S\xfaT" +
	"h\"\x09\x05\xb0\x8b}\xc0'J\xbf\x16R\x13*`" +
	"W5\xc0\xa7J\x7f\x14Z\xa4\x09#\xc0\xee\x8b\xf7\xad" +
	"\xd2\x9f\x85\x16\xa2\x84\x01\xb0\xa7\x0d\xc0\xef\x94\xfe*\xd4" +
	"^\x8b\x01\xc2\x00\xc6Y\xdae\x09\xc2\x12\x98g\xbd~" +
	"{\x94\xa5}p\xf0\xcbw:\xc3\xb4\xdf\x1e\xf1?\xd8" +
	"P\xb2\x0c)j\xdc\xfd3,e\xc7\xbd\xd6\x02\x94\xc1" +
	"\x9f\x00\x00\x00\xff\xff\x05'=\x03"

func init() {
	schemas.Register(schema_e18e32ede031d499,
		0xa6f4401be1b430d1)
}
